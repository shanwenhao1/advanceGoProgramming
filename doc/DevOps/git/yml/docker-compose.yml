version: '3'
services:
  # see https://docs.drone.io/server/provider/gogs/
  drone-server:
    image: drone/drone:latest
    ports:
      - 8080:80
      - 8843:443
    volumes:
      - ./drone:/data
    environment:
      - DRONE_OPEN=true
      - DRONE_AGENTS_ENABLED=true
      # gogs server address(地址一定要对, 生产环境建议用域名)
      - DRONE_GOGS_SERVER=http://192.168.1.89:3000
      # remember replace the secret with your secret
      - DRONE_RPC_SECRET=ALQU2M0KdptXUdTPKcEw
      # 192.168.1.89:8080
      - DRONE_SERVER_HOST=drone-server
      - DRONE_SERVER_PROTO=http
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_DEBUG=true
    restart: always
  gogs:
    image: gogs/gogs:latest
    ports:
      - "10022:22"
      - "3000:3000"
    volumes:
      - ./data/gogs:/data
    depends_on:
      - mysql
    restart: always
  mysql:
    image: mysql:5.7.16
    volumes:
      - ./gogs/mysql:/var/lib/mysql
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3308:3306
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      # replace pass with your password
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: gogs
      MYSQL_USER: gogs
      # replace pass with your password
      MYSQL_PASSWORD: pass
      TZ: Asia/Shanghai
    restart: always
  drone-runner:
    image: drone/drone-runner-docker:latest
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 7300:3000
    environment:
      - DRONE_RPC_PROTO=http
      - DRONE_RPC_HOST=192.168.1.89:8080
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=${HOSTNAME}
      - DRONE_RPC_SECRET=ALQU2M0KdptXUdTPKcEw
      - DRONE_LOGS_TRACE=true
      - DRONE_LOGS_DEBUG=true
    restart: always
  docker-bind:
    image: docker:dind
    privileged: true
    #  command: --storage-driver=overlay